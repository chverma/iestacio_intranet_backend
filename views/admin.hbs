{{!-- /home/chverma/projects/iestacio/iestacio_guardies/iestacio_intranet_backend/views/admin.hbs --}}

<style>
/* layout */
.container { max-width: 1200px; margin: 0 auto; padding: 1.25rem; font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial; color: #212529; }

/* nav pills */
#admin-pills { gap: .5rem; display:flex; flex-wrap:wrap; }
#admin-pills .nav-link { border-radius: .375rem; padding: .35rem .75rem; background: transparent; color: #495057; border: 1px solid transparent; }
#admin-pills .nav-link.active { background: #0d6efd; color: #fff; border-color: rgba(13,110,253,.25); }

/* tabs */
.tab-pane { padding-top: .75rem; }
.tab-pane.show.active { display: block; }

/* forms / controls */
.form-control, .form-select { height: calc(1.8em + .6rem); padding: .3rem .5rem; font-size: .9rem; border: 1px solid #ced4da; border-radius: .375rem; }
.form-control-sm { font-size: .85rem; padding: .25rem .45rem; }

/* table */
.table { width: 100%; border-collapse: collapse; margin-bottom: .5rem; font-size: .9rem; }
.table th, .table td { padding: .5rem .6rem; border-bottom: 1px solid #e9ecef; vertical-align: middle; }
.table thead th { background: #f8f9fa; font-weight: 600; }
.table-sm th, .table-sm td { padding: .35rem .45rem; }

/* buttons */
.btn { display: inline-flex; align-items: center; gap: .4rem; padding: .35rem .6rem; font-size: .85rem; border-radius: .375rem; border: 1px solid transparent; cursor: pointer; }
.btn-primary { background: #0d6efd; color: #fff; }
.btn-outline-secondary { background: transparent; color: #495057; border-color: #6c757d; }
.btn-outline-danger { background: transparent; color: #dc3545; border-color: #dc3545; }

/* small helpers */
.text-end { text-align: right; }
.text-muted { color: #6c757d; }
.small { font-size: .85rem; }

/* responsive: stack search+limit on small screens */
@media (max-width: 640px) {
  .d-flex.gap-2 { flex-direction: column; gap: .5rem; }
  #admin-pills { justify-content: flex-start; }
  .table-responsive { overflow-x: auto; -webkit-overflow-scrolling: touch; }
  .btn { width: 100%; justify-content: center; }
  .text-end { text-align: left; }
}
</style>

<div class="container py-4">
    <h1 class="mb-3">Panel de administración</h1>

    <ul class="nav nav-pills mb-4" id="admin-pills" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="users-tab" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="true">Usuarios</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="schedule-tab" data-bs-target="#schedule" type="button" role="tab" aria-controls="schedule" aria-selected="false">Schedule</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="absence-tab" data-bs-target="#absence" type="button" role="tab" aria-controls="absence" aria-selected="false">Absence</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="calendarevent-tab" data-bs-target="#calendarevent" type="button" role="tab" aria-controls="calendarevent" aria-selected="false">CalendarEvent</button>
        </li>
    </ul>

    <div class="tab-content" id="admin-pills-content">
        <!-- Usuarios -->
        <div class="tab-pane fade show active" id="users" role="tabpanel" aria-labelledby="users-tab">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4>Usuarios</h4>
                <div>
                    <button class="btn btn-sm btn-primary">Nuevo usuario</button>
                </div>
            </div>

            <div class="mb-3 d-flex gap-2">
                <input id="users-search" type="search" class="form-control form-control-sm" placeholder="Buscar usuarios..." aria-label="Buscar usuarios">
                <select id="users-limit" class="form-select form-select-sm" style="width: auto;">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                </select>
            </div>

            <div class="table-responsive">
                <table class="table table-sm table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Email</th>
                            <th>Rol</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="users-tbody">
                        <!-- JS will render rows here -->
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between align-items-center">
                <div id="users-info" class="text-muted small"></div>
                <div>
                    <button id="users-prev" class="btn btn-sm btn-outline-secondary">Prev</button>
                    <button id="users-next" class="btn btn-sm btn-outline-secondary">Next</button>
                </div>
            </div>
        </div>

        <!-- Absence -->
        <div class="tab-pane fade" id="absence" role="tabpanel" aria-labelledby="absence-tab">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4>Absence</h4>
                <button class="btn btn-sm btn-primary">Nueva ausencia</button>
            </div>

            <div class="mb-3 d-flex gap-2">
                <input id="absences-search" type="search" class="form-control form-control-sm" placeholder="Buscar ausencias..." aria-label="Buscar ausencias">
                <select id="absences-limit" class="form-select form-select-sm" style="width: auto;">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="table-responsive">
                <table class="table table-sm table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Usuario</th>
                            <th>Desde</th>
                            <th>Hasta</th>
                            <th>Motivo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="absences-tbody">
                        <!-- JS will render rows -->
                    </tbody>
                </table>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <div id="absences-info" class="text-muted small"></div>
                <div>
                    <button id="absences-prev" class="btn btn-sm btn-outline-secondary">Prev</button>
                    <button id="absences-next" class="btn btn-sm btn-outline-secondary">Next</button>
                </div>
            </div>
        </div>

        <!-- CalendarEvent -->
        <div class="tab-pane fade" id="calendarevent" role="tabpanel" aria-labelledby="calendarevent-tab">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4>CalendarEvent</h4>
                <button class="btn btn-sm btn-primary">Nuevo evento</button>
            </div>

            <div class="mb-3 d-flex gap-2">
                <input id="events-search" type="search" class="form-control form-control-sm" placeholder="Buscar eventos..." aria-label="Buscar eventos">
                <select id="events-limit" class="form-select form-select-sm" style="width: auto;">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="table-responsive">
                <table class="table table-sm table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Título</th>
                            <th>Inicio</th>
                            <th>Fin</th>
                            <th>Tipo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="events-tbody">
                        <!-- JS will render rows -->
                    </tbody>
                </table>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <div id="events-info" class="text-muted small"></div>
                <div>
                    <button id="events-prev" class="btn btn-sm btn-outline-secondary">Prev</button>
                    <button id="events-next" class="btn btn-sm btn-outline-secondary">Next</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Simple tab behavior if Bootstrap JS is not loaded.
    (function () {
        const pills = document.querySelectorAll('#admin-pills .nav-link');
        const panes = document.querySelectorAll('.tab-pane');

        function normalizeTarget(t) {
            if (!t) return null;
            return t.startsWith('#') ? t : ('#' + t);
        }

        pills.forEach(pill => {
            pill.addEventListener('click', function (e) {
                const targetAttr = pill.getAttribute('data-bs-target') || pill.getAttribute('data-target') || pill.getAttribute('href');
                const target = normalizeTarget(targetAttr);
                if (!target) return;

                // activate pill
                pills.forEach(p => p.classList.remove('active'));
                pill.classList.add('active');

                // show pane
                panes.forEach(p => {
                    if ('#' + p.id === target) {
                        p.classList.add('show', 'active');
                    } else {
                        p.classList.remove('show', 'active');
                    }
                });
            });
        });
    })();

    (function () {
        // Util: robust fetch + parse list
        async function fetchList(path, page, limit, search) {
            const params = new URLSearchParams();
            params.set('page', page);
            params.set('limit', limit);
            if (search) params.set('q', search);
            const res = await fetch(path + '?' + params.toString(), { credentials: 'same-origin' });
            if (!res.ok) throw new Error('Fetch error ' + res.status);
            return res.json();
        }

        function toArrayResponse(data) {
            // soporta { items, total, page, limit } o array directo
            if (Array.isArray(data)) return { items: data, total: data.length };
            if (data && data.items) return { items: data.items, total: data.total ?? data.items.length, page: data.page ?? 1, limit: data.limit ?? data.items.length };
            return { items: [], total: 0 };
        }

        // Render helpers para cada sección:
        function renderUsers(items) {
            const tbody = document.getElementById('users-tbody');
            tbody.innerHTML = '';
            for (const u of items) {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${u.id_user ?? ''}</td>
                    <td>${u.name ?? ''}</td>
                    <td>${u.email ?? ''}</td>
                    <td>${u.role ?? ''}</td>
                    <td class="text-end">
                        <button class="btn btn-sm btn-outline-secondary">Editar</button>
                        <button class="btn btn-sm btn-outline-danger">Eliminar</button>
                    </td>
                `;
                tbody.appendChild(tr);
            }
        }

        function renderAbsences(items) {
            const tbody = document.getElementById('absences-tbody');
            tbody.innerHTML = '';
            for (const a of items) {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${a.id ?? ''}</td>
                    <td>${a.user.name + ' ' + a.user.surname ?? ''}</td>
                    <td>${new Date(a.date_absence).toLocaleString() ?? ''}</td>
                    <td>${a.subject}</td>
                    <td>${a.location ?? ''}</td>
                    <td class="text-end">
                        <button class="btn btn-sm btn-outline-secondary">Editar</button>
                        <button class="btn btn-sm btn-outline-danger">Eliminar</button>
                    </td>
                `;
                tbody.appendChild(tr);
            }
        }

        function renderEvents(items) {
            const tbody = document.getElementById('events-tbody');
            tbody.innerHTML = '';
            for (const e of items) {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${e.id_event ?? ''}</td>
                    <td>${e.subject ?? ''}</td>
                    <td>${new Date(e.start).toLocaleString() ?? ''}</td>
                    <td>${new Date(e.end).toLocaleString() ?? ''}</td>
                    <td>${e.user.name + ' ' + e.user.surname ?? ''}</td>
                    <td class="text-end">
                        <button class="btn btn-sm btn-outline-secondary">Editar</button>
                        <button class="btn btn-sm btn-outline-danger">Eliminar</button>
                    </td>
                `;
                tbody.appendChild(tr);
            }
        }

        // Generic pager controller factory
        function setupPager(options) {
            const { basePath, searchEl, limitEl, prevBtn, nextBtn, infoEl, render } = options;
            let page = 1;
            async function load() {
                const limit = parseInt(limitEl.value, 10) || 10;
                const search = (searchEl && searchEl.value) ? searchEl.value.trim() : '';
                try {
                    const data = await fetchList(basePath, page, limit, search);
                    const parsed = toArrayResponse(data);
                    render(parsed.items || []);
                    infoEl.textContent = `Página ${page} · Mostrando ${parsed.items.length} de ${parsed.total ?? '?'} elementos`;
                } catch (err) {
                    infoEl.textContent = 'Error cargando datos';
                    console.error(err);
                }
            }
            prevBtn.addEventListener('click', () => {
                if (page > 1) { page -= 1; load(); }
            });
            nextBtn.addEventListener('click', () => {
                page += 1; load();
            });
            limitEl.addEventListener('change', () => { page = 1; load(); });
            if (searchEl) {
                let to = 0;
                searchEl.addEventListener('input', () => {
                    clearTimeout(to);
                    to = setTimeout(() => { page = 1; load(); }, 300);
                });
            }
            // initial load
            load();
        }

        // Setup all pagers
        document.addEventListener('DOMContentLoaded', () => {
            setupPager({
                basePath: '/users',
                searchEl: document.getElementById('users-search'),
                limitEl: document.getElementById('users-limit'),
                prevBtn: document.getElementById('users-prev'),
                nextBtn: document.getElementById('users-next'),
                infoEl: document.getElementById('users-info'),
                render: renderUsers,
            });

            setupPager({
                basePath: '/absence',
                searchEl: document.getElementById('absences-search'),
                limitEl: document.getElementById('absences-limit'),
                prevBtn: document.getElementById('absences-prev'),
                nextBtn: document.getElementById('absences-next'),
                infoEl: document.getElementById('absences-info'),
                render: renderAbsences,
            });

            setupPager({
                basePath: '/calendarevent',
                searchEl: document.getElementById('events-search'),
                limitEl: document.getElementById('events-limit'),
                prevBtn: document.getElementById('events-prev'),
                nextBtn: document.getElementById('events-next'),
                infoEl: document.getElementById('events-info'),
                render: renderEvents,
            });
        });
    })();
</script>